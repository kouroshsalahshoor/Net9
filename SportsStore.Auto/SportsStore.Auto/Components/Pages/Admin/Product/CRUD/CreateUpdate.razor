@page "/xadmin/product/update/{id:long}"
@page "/xadmin/product/create"
@rendermode InteractiveServer
@attribute [Authorize]

<h3 class="bg-@(Id == 0 ? "primary" : "warning") text-white text-center p-1">@(Id == 0 ? "Create" : "Update") a Product</h3>

<EditForm Model="_model" OnValidSubmit="submit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    @if (_model.Id != 0)
    {
        <div class="form-group">
            <label>ID</label>
            <input class="form-control" disabled value="@_model.Id" />
        </div>
    }
    <div class="form-group">
        <label>Name</label>
        <ValidationMessage For="@(() => _model.Name)" />
        <InputText class="form-control" @bind-Value="_model.Name" />
    </div>
    <div class="form-group">
        <label>Description</label>
        <ValidationMessage For="@(() => _model.Description)" />
        <InputText class="form-control" @bind-Value="_model.Description" />
    </div>
    <div class="form-group">
        <label>Category</label>
        <ValidationMessage For="@(() => _model.Category)" />
        <InputText class="form-control" @bind-Value="_model.Category" />
    </div>
    <div class="form-group">
        <label>Price</label>
        <ValidationMessage For="@(() => _model.Price)" />
        <InputNumber class="form-control" @bind-Value="_model.Price" />
    </div>
    <div class="mt-2">
        <button type="submit" class="btn btn-@(Id == 0 ? "primary" : "warning")">Save</button>
        <NavLink class="btn btn-light" href="/admin/products">Cancel</NavLink>
    </div>
</EditForm>

@code {
    private ApplicationDbContext _db => Service;
    [Parameter] public long Id { get; set; } = 0;

    private Product _model { get; set; } = new();

    protected override void OnParametersSet()
    {
        if (Id != 0)
        {
            _model = _db.Products.FirstOrDefault(p => p.Id == Id) ?? new();
        }
    }
    private async Task submit()
    {
        if (Id == 0)
        {
            _db.Products.Add(_model);
        }
        else
        {
            _db.Products.Update(_model);
        }

        await _db.SaveChangesAsync();

        _navigationManager?.NavigateTo("/admin/products");
    }
    public string ThemeColor => Id == 0 ? "primary" : "warning";
    public string TitleText => Id == 0 ? "Create" : "Update";
}