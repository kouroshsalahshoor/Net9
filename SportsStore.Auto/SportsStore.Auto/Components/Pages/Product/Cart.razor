@page "/cart"

<PageTitle>@_title</PageTitle>
<h3>@_title</h3>

@* <table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Quantity</th>
            <th>Item</th>
            <th class="text-right">Price</th>
            <th class="text-right">Subtotal</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var line in _cart?.Lines ?? Enumerable.Empty<CartLine>())
        {
            <tr>
                <td class="text-center">@line.Quantity</td>
                <td class="text-left">@line.Product.Name</td>
                <td class="text-right">@line.Product.Price.ToString("c")</td>
                <td class="text-right">
                    @((line.Quantity * line.Product.Price).ToString("c"))
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="3" class="text-right">Total:</td>
            <td class="text-right">
                @Model?.Cart?.ComputeTotalValue().ToString("c")
            </td>
        </tr>
    </tfoot>
</table>
<div class="text-center">
    <a class="btn btn-primary" href="@Model?.ReturnUrl">Continue shopping</a>
</div>
 *@
@code {
    private string _title = "Cart";

    private Cart? _cart { get; set; }
    private string _returnUrl { get; set; } = "/";

    // protected override async Task OnInitializedAsync()
    // {
    //     _returnUrl = _returnUrl ?? "/";
    //     Cart = HttpContext.Session.GetJson<Cart>("cart") ?? new Cart();
    // }

    // public IActionResult OnPost(long productId, string returnUrl)
    // {
    //     Product? product = repository.Products
    //     .FirstOrDefault(p => p.ProductID == productId);
    //     if (product != null)
    //     {
    //         Cart = HttpContext.Session.GetJson<Cart>("cart") ?? new Cart();
    //         Cart.AddItem(product, 1);
    //         HttpContext.Session.SetJson("cart", Cart);
    //     }
    //     return RedirectToPage(new { returnUrl = returnUrl });
    // }
}
